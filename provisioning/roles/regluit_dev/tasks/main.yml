---

- name: Install dev dependencies
  become: true
  apt:
    name: "{{ item }}"
    update_cache: true
    state: present
  with_items:
    - 'git'
    - 'python-setuptools'
    - 'python-lxml'
    - 'build-essential'
    - 'libssl-dev'
    - 'libffi-dev'
    - 'libxml2-dev'
    - 'libxslt-dev'
    - 'mysql-server'
    - 'mysql-client'
    - 'libmysqlclient-dev'
    - 'python-mysqldb'

- name: Migrate databse
  django_manage:
    app_path: "{{ project_path }}"
    command: "migrate --noinput"
    virtualenv: "{{ project_path }}/venv"
    settings: "{{ django_settings_module }}"

- name: Import fixtures
  django_manage:
    app_path: "{{ project_path }}"
    command: "loaddata"
    virtualenv: "{{ project_path }}/venv"
    settings: "{{ django_settings_module }}"
    fixtures: "core/fixtures/initial_data.json core/fixtures/bookloader.json"

- name: Start Celery Worker
  django_manage:
    app_path: "{{ project_path }}"
    command: "celery worker --detach --loglevel=INFO"
    virtualenv: "{{ project_path }}/venv"
    settings: "{{ django_settings_module }}"

- name: Start Celery Beat
  django_manage:
    app_path: "{{ project_path }}"
    command: "celery beat --detach --loglevel=INFO"
    virtualenv: "{{ project_path }}/venv"
    settings: "{{ django_settings_module }}"

- name: Copy activation script
  template:
    src: "activate_venv.sh.j2"
    dest: "/home/{{ ansible_user }}/activate_venv.sh"
    owner: "{{ ansible_user }}"
    mode: "u=rx,g=rx,o=rwx"

- name: Source activation script in bash profile
  blockinfile:
    path: "/home/{{ ansible_user }}/.profile"
    block: |
      if [ -f ~/activate_venv.sh ]; then
        source ~/activate_venv.sh
      fi
    marker: "# {mark} SOURCE REGLUIT ACTIVATION SCRIPT ON LOGIN"

- debug:
    msg: "Successfully provisioned regluit development environment."
